{"version":3,"sources":["Controllers/Redux/authSlice.js","Views/Pages/Login/login.jsx","Views/sidebar/sidebar.jsx","Models/bugModel.js","Controllers/Redux/bugSlice.js","Controllers/Redux/bugController.js","Controllers/priorityController.js","Views/Components/Bug Card/Dashboard/card.jsx","Views/Pages/Dashboard/dashboard.jsx","Views/Components/Bug Card/bugCard.jsx","Views/Components/Bug Card/Bug View/component/bugViewSection.jsx","Views/Components/Bug Card/edit delete/editPanel.jsx","Views/Components/Bug Card/Bug Create/bugForm.jsx","Views/Components/Bug Card/Bug View/bugView.jsx","Views/Pages/viewBugs.jsx","App.js","Controllers/Redux/userSlice.js","index.js"],"names":["slice","createSlice","name","initialState","admin","LoggedIn","reducers","signIn","state","action","payload","password","signOut","createUser","actions","dispatch","useDispatch","useState","formInput","setFormInput","inputChanged","e","target","value","className","placeholder","onChange","type","onClick","preventDefault","auth","useSelector","to","bug","undefined","this","_id","details","steps","version","priority","assigned","creator","time","getBugs","data","push","bugModel","sort","a","b","retrieveBugs","createBugs","updateBugs","markComplete","colors","level","color","props","clicked","style","count","bugs","browserHistory","useHistory","highCount","midCount","lowCount","redirect","filterBugs","filter","useEffect","length","PriorityController","title","info","editClicked","deletedClicked","BugModel","bugObject","setBugObject","close","required","displayEdit","setDisplayEdit","deleteClicked","isDisplayed","DISPLAY_BUG","SET_DISPLAY_BUG","BugClicked","map","key","App","path","exact","getUser","reducer","combineReducers","authReducer","bugReducer","user","userReducer","store","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8dff8b8.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\nconst slice =  createSlice ({\r\n    name: \"auth\",\r\n    initialState: { \r\n        admin: false,\r\n        LoggedIn: false,\r\n    }, \r\n    reducers: {\r\n        signIn: (state, action) => {\r\n            const {name, password} = action.payload;\r\n            state.LoggedIn = true;\r\n            state.admin =  true;\r\n        },\r\n        signOut:(state) => {\r\n            state.LoggedIn = false;\r\n            state.admin = false;\r\n        },\r\n        createUser: (state, action) => {\r\n\r\n        }\r\n    } \r\n})\r\n\r\nexport default slice.reducer;\r\n\r\nexport const {signIn, signOut, createUser} = slice.actions;","import React,{useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {signIn} from '../../../Controllers/Redux/authSlice'\r\nimport '../Login/login.css'\r\n\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const [formInput, setFormInput] = useState({\r\n        name: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    function inputChanged(e){\r\n        setFormInput({\r\n            ...formInput,\r\n            [e.target.name]:e.target.value \r\n        })\r\n    }\r\n//above sets the local state\r\n//follow uses local state to send to redux action\r\n\r\n    function submit(e) {\r\n        dispatch(signIn(formInput));\r\n        e.preventDefault();\r\n    }\r\n\r\n    return(\r\n        <div className=\"loginBG\">\r\n            <form className= 'login-panel'>\r\n                <h1>Login:</h1>\r\n                <input name='name' placeholder='Name' onChange={inputChanged} value={formInput.name}></input>\r\n                <input name='password' type='password' placeholder='Password' \r\n                onChange={inputChanged} value={formInput.password}></input>\r\n                <button type= 'submit' onClick={submit}>Login</button>\r\n            </form>\r\n         </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {signOut} from '../../Controllers/Redux/authSlice'\r\nimport './sidebar.css'\r\n\r\nexport default ()=> {\r\n    const dispatch = useDispatch();\r\n    const{ auth } = useSelector(state => state)\r\n\r\n    function SignOut(){\r\n        dispatch(signOut());\r\n    }\r\n\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <Link className='nav-link' to=\"/\">\r\n                <h1 className='brand'>Bug-Tracker</h1>\r\n                    <ul>\r\n                        <li><Link to ='/' className='nav-link'>Dashboard</Link></li>\r\n                        <li><Link to ='/viewbugs' className='nav-link'>View Bugs</Link></li>\r\n                        {auth.admin && <li><Link to ='/create' className='nav-link'>Create Bug</Link></li>}\r\n                    </ul>\r\n                    <button className='nav-link logout' onClick={SignOut}>Logout</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","export default bug \r\n\r\nfunction bug(bug) {\r\n    if(bug != undefined) {\r\n        this._id = bug._id;\r\n        this.name = bug.name;\r\n        this.details = bug.details;\r\n        this.steps = bug.steps;\r\n        this.version = bug.version;\r\n        this.priority =  bug.priority;\r\n        this.assigned =  bug.assigned;\r\n        this.creator = bug.creator;\r\n        this.time = bug.time;\r\n    }\r\n}\r\n","import {createSlice} from '@reduxjs/toolkit'\r\nimport {retrieveBugs} from './bugController'\r\n\r\nconst slice = createSlice({\r\n    name:\"bug\",\r\n    initialState:[],\r\n    reducers:{\r\n        getBugs:state => retrieveBugs(),\r\n        \r\n        createBugs: (state, actions) => {\r\n\r\n         },\r\n        updateBugs(state, actions) {\r\n\r\n        },\r\n        markComplete:(state, actions) => {\r\n            \r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport default slice.reducer;\r\n\r\nexport const {getBugs, createBugs, updateBugs, markComplete} = slice.actions","import bugModel from './../../Models/bugModel'\r\n\r\nexport function retrieveBugs(){\r\n    let data = [];\r\n\r\n    data.push(new bugModel({\r\n        _id:124578,\r\n        name:\"Crash on load\",\r\n        details: \"Crashes after 3 seconds\",\r\n        steps: \"Open application and it will crash\",\r\n        version: \"V2.0\",\r\n        assigned: \"Henry deBuchananne\",\r\n        creator: \"God\",\r\n        priority: 1,\r\n        time: \"18:54\",\r\n    }))\r\n\r\n    data.push(new bugModel({\r\n        _id:124578,\r\n        name:\"Cant load\",\r\n        details: \"Crashes after 3 seconds\",\r\n        steps: \"Open application and it will crash\",\r\n        version: \"V2.0\",\r\n        assigned: \"John Smith\",\r\n        creator: \"God\",\r\n        priority: 3,\r\n        time: \"18:54\",\r\n    }))\r\n\r\n    let sorted = data.sort((a,b) => {return a.priority-b.priority})\r\n    return sorted;\r\n    \r\n}\r\n","const colors = [\"#b33a3a\", \"#e0770d\", \"#43c00b\"]\r\n\r\nexport default (priority) => {\r\n    const level = [\"High\", \"Medium\", \"Low\"]\r\n    return {\r\n        level:(level [priority-1]),\r\n        color:colors[priority-1]\r\n    }\r\n}","import React from 'react'\r\nimport './card.css'\r\nimport priority from '../../../../Controllers/priorityController'\r\n\r\nexport default (props) => {\r\nconst {level,color} = priority(props.priority)\r\n\r\n    return(\r\n        <div className='dashboard-card' onClick={props.clicked} style= {{color: color}}>\r\n            <h2>Total: {level}</h2>\r\n            <p>{props.count}</p>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {getBugs} from '../../../Controllers/Redux/bugSlice'\r\nimport Card from '../../Components/Bug Card/Dashboard/card'\r\n\r\n\r\nexport default ()=> {\r\n    const dispatch = useDispatch();\r\n    const bugs = useSelector (state=>state.bugs);\r\n    const browserHistory = useHistory();\r\n    let highCount = 0;\r\n    let midCount = 0;\r\n    let lowCount = 0;\r\n    if(bugs!=undefined) {\r\n        highCount = filterBugs(1);\r\n        midCount = filterBugs(2);\r\n        lowCount = filterBugs(3);\r\n    }\r\n    function redirect() {\r\n        browserHistory.push('/viewbugs')\r\n    }\r\n\r\n    function filterBugs(priority){\r\n        return bugs.filter((bug) => {return bug.priority == priority && priority})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(getBugs())\r\n    }, [bugs == undefined])\r\n    return(\r\n        <div className='page-container'>\r\n            <Card priority=\"1\" count= {highCount.length} clicked={redirect}/>\r\n            <Card priority=\"2\" count= {midCount.length} clicked={redirect}/>\r\n            <Card priority=\"3\" count= {lowCount.length} clicked={redirect}/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './bugCard.css'\r\nimport PriorityController from '../../../Controllers/priorityController'\r\n\r\nexport default (props) => {\r\n    const {name,priority,version} = props.bug;\r\n    const {level,color} = PriorityController(priority);\r\n\r\n\r\n    function Clicked(){\r\n        props.clicked(name);\r\n    }\r\n\r\n    return(\r\n        <div className= 'bug-card' onClick={Clicked} style={{color:color}}>\r\n            <h2 className='name'>{name}</h2>\r\n            <h4 className='priority'>{level}</h4>\r\n            <h5 className='version'>{version}</h5>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './bugViewSection.css'\r\n\r\nexport default(props)=> {\r\n    return(\r\n    <div className='view-section'>\r\n        <h2>{props.title}</h2>\r\n        <p>{props.info}</p>\r\n    </div>\r\n    )\r\n}","import React from 'react'\r\nimport './editPanel.css'\r\n\r\nexport default (props) => {\r\n    return(\r\n        <div className=\"edit-panel\">\r\n            <button onClick={props.editClicked}>Edit</button>\r\n            <button onClick={props.deletedClicked}>Delete</button>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport './bugForm.css'\r\nimport BugModel from '../../../../Models/bugModel'\r\n\r\nexport default (props)=> {\r\n    const [bugObject, setBugObject] = useState(new BugModel(props.bug))\r\n\r\nfunction inputChanged(e){\r\n    setBugObject({\r\n            ...bugObject,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\nreturn(\r\n    <div className='bug-create'>\r\n    {props.title == \"Edit Bug\" && <button className='close-btn' onClick={props.close}>Close</button>}\r\n        <h1>{props.title}</h1>\r\n        <form>\r\n            <label>Name:</label>\r\n            <input name='name' placeholder='Bug Name' required onChange={inputChanged} value={bugObject.name}></input>\r\n            <label>Details:</label>\r\n            <textarea name='details' placeholder='Detailed descripition on the bug' required \r\n            onChange={inputChanged} value={bugObject.details}></textarea>\r\n            <label>Steps:</label>\r\n            <textarea name='steps' placeholder='Steps to recreate the bug' required\r\n            onChange={inputChanged} value={bugObject.steps}></textarea>\r\n            <label>Priority:</label>\r\n            <select name='priority' required \r\n            onChange={inputChanged} value={bugObject.priority}>\r\n                <option value='1'>High</option>\r\n                <option value='2'>Mid</option>\r\n                <option value='3'>Low</option>\r\n            </select>\r\n            <label>Assigned</label>\r\n            <select name='assigned' onChange={inputChanged} value={bugObject.assigned}>\r\n                <option>Henry deBuchananne</option>\r\n            </select>\r\n            <label>Application Version</label>\r\n            <input name='version' placeholder='Application Version' \r\n            onChange={inputChanged} value={bugObject.version}></input>\r\n            <button type='submit'>{props.title}</button>\r\n            \r\n        </form>\r\n    </div>\r\n)\r\n\r\n}","import React, {useState} from 'react'\r\nimport ViewSection from './component/bugViewSection'\r\nimport BugModel from '../../../../Models/bugModel'\r\nimport {useDispatch} from 'react-redux'\r\nimport {markComplete} from '../../../../Controllers/Redux/bugSlice'\r\nimport EditPanel from '../edit delete/editPanel'\r\nimport EditBug from '../Bug Create/bugForm'\r\n\r\nimport './bugView.css'\r\n\r\n\r\nexport default (props) => {\r\n    const dispatch = useDispatch();\r\n    const bug = new BugModel(props.bug);\r\n   \r\n\r\n   const[displayEdit, setDisplayEdit] = useState(false) ;\r\n   function editClicked() {\r\n        setDisplayEdit(!displayEdit)\r\n   }\r\n\r\n   function deleteClicked(){\r\n\r\n   }\r\n\r\n\r\n   \r\n    return(\r\n        <>\r\n        <div className='bug-view'>\r\n        <EditPanel editClicked={editClicked} deleteClicked={deleteClicked}/>\r\n        <button onClick={props.clicked} className='close-btn'>Close</button>\r\n            <h1> {bug.name}</h1>\r\n            <ViewSection title= 'Details' info ={bug.details} />\r\n            <ViewSection title= 'Steps' info ={bug.steps} />\r\n            <ViewSection title= 'Priority' info ={bug.priority} />\r\n            <ViewSection title= 'Creator' info ={bug.creator} />\r\n            <ViewSection title= 'App Version' info ={bug.version} />\r\n            <ViewSection title= 'Time Created' info ={bug.time} />\r\n            <button onClick={()=>{dispatch(markComplete())}} className='complete-btn'>Mark Complete</button>\r\n        </div>\r\n        {displayEdit && <EditBug title=\"Edit Bug\" bug= {bug} close={editClicked}/>}\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getBugs} from '../../Controllers/Redux/bugSlice'\r\nimport BugCard from '../Components/Bug Card/bugCard'\r\nimport BugView from '../../Views/Components/Bug Card/Bug View/bugView'\r\n\r\nexport default() => {\r\n    const [DISPLAY_BUG, SET_DISPLAY_BUG]= useState({\r\n        name: \"\",\r\n        isDisplayed: false\r\n    })\r\n    const dispatch = useDispatch();\r\n    const {bugs} = useSelector(state => state);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getBugs());\r\n    },[bugs.length < 1])\r\n    \r\n    function BugClicked(name){\r\n        SET_DISPLAY_BUG({\r\n            isDisplayed:!DISPLAY_BUG.isDisplayed,\r\n            name: name,\r\n        })\r\n    }\r\n    return(\r\n        <div className= 'page-container'>\r\n            {bugs.map((bug,key) => (\r\n                <BugCard key={key} bug={bug} clicked={BugClicked}/>\r\n            ))}\r\n            {DISPLAY_BUG.isDisplayed && <BugView clicked={BugClicked} bug={bugs.filter((bug)=> bug.name == DISPLAY_BUG.name)[0]} />}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Login from './Views/Pages/Login/login';\r\nimport { BrowserRouter as Router,Switch,Route } from 'react-router-dom'\r\nimport Sidebar from './Views/sidebar/sidebar'\r\nimport Dashboard from './Views/Pages/Dashboard/dashboard'\r\nimport ViewBugPage from './Views/Pages/viewBugs'\r\nimport CreateBug from './Views/Components/Bug Card/Bug Create/bugForm'\r\n\r\nfunction App() {\r\n  const {auth} = useSelector(state => state)\r\n  return (\r\n  <Router>\r\n  {!auth.LoggedIn ? <Login /> :\r\n  <>\r\n    <Sidebar/>\r\n    <Switch>\r\n      <Route path=\"/\" exact><Dashboard /></Route>\r\n      <Route path=\"/viewbugs\"><ViewBugPage /></Route>\r\n      <Router path=\"/create\"><div className='page-container'><CreateBug title=\"Create Bug\" /> </div></Router>\r\n    </Switch>\r\n  </>\r\n  }\r\n  </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nconst slice = createSlice({\r\n    name:\"user\",\r\n    initialState: [{}],\r\n    reducers: {\r\n        getUser: (state) => {\r\n            state.push({name:\"Henry deBuchananne\"})\r\n            state.push({name:\"John Smith\"})\r\n        }\r\n    }\r\n})\r\n\r\nexport default  slice.reducer;\r\nexport const {getUser} = slice.actions;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport App from './App'; \r\n\r\n//reducers\r\nimport authReducer from './Controllers/Redux/authSlice';\r\nimport bugReducer from './Controllers/Redux/bugSlice';\r\nimport userReducer from './Controllers/Redux/userSlice';\r\n\r\n\r\n//Redux configure\r\nconst reducer = combineReducers ({\r\n  auth: authReducer,\r\n  bugs: bugReducer,\r\n  user: userReducer,\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer\r\n})\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App />\r\n    </Provider>\r\n    ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}